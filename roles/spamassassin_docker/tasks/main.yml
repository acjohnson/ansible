---
- block:

  - name: Gather package facts
    package_facts:
      manager: auto

  - name: Check if docker-ce package is installed
    debug:
      msg: "{{ ansible_facts.packages['docker-ce'] | length }} version(s) of docker-ce are installed!"
    when: "'docker-ce' in ansible_facts.packages"

  - name: Set skip_docker variable
    set_fact:
      skip_docker: True
    when: "'docker-ce' in ansible_facts.packages"

  - name: Install pip.
    package:
      name: python3-pip
      state: present

  - name: Install Docker SDK for Python
    pip:
      name: docker
      state: present
      executable: pip3

  - name: Run docker role only on new clusters or if force_update is defined
    include_role:
      name: docker
    when: (force_update is defined) or (skip_docker is undefined)

  - name: Create br-local network
    docker_network:
      name: br-local

  become: yes

- name: Configure spamassassin container
  include_role:
    name: configure_container
  vars:
    custom_tasks: True
    container_type: spamassassin
    container_name: "{{ spamassassin_config_item.container_name }}"
    configure_container: False
    config_filename: "{{ spamassassin_container_globals.config_filename }}"
  with_items:
    - "{{ spamassassin_containers }}"
  loop_control:
    loop_var: spamassassin_config_item

- name: Create spamassassin container
  include_role:
    name: create_container
  vars:
    registry_server: "{{ spamassassin_container_globals.registry_server }}"
    image_name: "{{ spamassassin_container_globals.image_name }}"
    image_tag: "{{ spamassassin_container_globals.image_tag }}"
    image_uri: "{{ spamassassin_container_globals.registry_server }}/{{ spamassassin_container_globals.image_name }}:{{ spamassassin_container_globals.image_tag }}"
    image_uri_no_tag: "{{ spamassassin_container_globals.registry_server }}/{{ spamassassin_container_globals.image_name }}"
    container_name: "{{ spamassassin_item.container_name }}"
    container_command: "{{ spamassassin_container_globals.container_command }}"
    container_volumes: "{{ spamassassin_item.container_volumes }}"
    container_exposed_ports: "{{ spamassassin_item.container_exposed_ports }}"
    container_published_ports: "{{ spamassassin_item.container_published_ports }}"
    container_networks: "{{ spamassassin_item.container_networks }}"
    container_log_options: "{{ spamassassin_container_globals.container_log_options }}"
  with_items:
    - "{{ spamassassin_containers }}"
  loop_control:
    loop_var: spamassassin_item

- name: "Disable Docker repo to avoid unexpected patching - [Debian]"
  apt_repository:
    repo: "deb [arch={{ docker_apt_arch }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}"
    state: absent
  become: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Bootstrap Spamassassin
  include_tasks: "bootstrap.yml"
